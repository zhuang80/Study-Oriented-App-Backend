# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Deploy to Server
      uses: AEnterprise/rsync-deploy@v1.0
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        ARGS: -avz --delete --exclude='*.pyc'
        SERVER_PORT: '22'
        FOLDER: ./
        SERVER_IP: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USERNAME }}
        SERVER_DESTINATION: /home/ubuntu/app_backend
    - name: Build and run on AWS ECS (Docker)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /home/ubuntu/app_backend
          mvn -B package -DskipTests --file pom.xml
          sudo docker build -t app_backend:latest .
          sudo docker stop app_backend || true && sudo docker rm app_backend || true
          sudo docker run -it -d -v /tmp/wequan_log:/log --name app_backend -p 8080:8080 app_backend:latest
