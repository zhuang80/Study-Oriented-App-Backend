package com.wequan.bu.repository.dao;

import com.wequan.bu.repository.model.Thread;
import com.wequan.bu.repository.model.ThreadStream;
import com.wequan.bu.repository.model.ThreadUserSelectedSubjects;
import com.wequan.bu.repository.model.extend.ThreadStats;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.session.RowBounds;

import java.util.Date;
import java.util.List;

@Mapper
public interface ThreadMapper extends GeneralMapper<Thread>{

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_thread
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * 6/28
     * @param record
     * @return
     */
    int insertThread(Thread record);

    /**
     *6/20
     * @param threadStream
     * @return
     */
    int insertReply(ThreadStream threadStream);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_thread
     *
     * @mbg.generated
     */
    int insertSelective(Thread record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_thread
     *
     * @mbg.generated
     */
    Thread selectByPrimaryKey(Integer id);

    /**
     * 6/18
     * @param schoolId
     * @param rowBounds
     * @return
     */
    List<Thread> selectBySchoolId(Integer schoolId, RowBounds rowBounds);

    /**
     * 6/19
     * @param schoolId
     * @param tagId
     * @param rowBounds
     * @return
     */
    List<Thread> selectBySchoolIdAndTag(Integer schoolId, Integer tagId, RowBounds rowBounds);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_thread
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Thread record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_thread
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Thread record);

    /**
     * 6/20
     * @param threadId
     * @param userId
     */
    void likeThread(Integer threadId, Integer userId);

    /**
     * 6/20
     * @param threadId
     * @param userId
     */
    void dislikeThread(Integer threadId, Integer userId);

    /**
     * 6/20
     * @param threadId
     * @param replyId
     * @param userId
     */
    void likeReplyOfThread(Integer threadId, Integer replyId, Integer userId);

    /**
     * 6/20
     * @param threadId
     * @param replyId
     * @param userId
     */
    void dislikeReplyOfThread(Integer threadId, Integer replyId, Integer userId);

    /**
     * 6/22
     * @param userId
     * @param subjectIds
     */
    void addUserInterestedSubjects(Integer userId, String subjectIds);

    /**
     * 6/19
     * @param threadId
     * @param rowBounds
     * @return
     */
    List<ThreadStream> selectDirectRepliesById(Integer threadId, RowBounds rowBounds);

    /**
     * 6/22
     * @param threadId
     * @param rowBounds
     * @return
     */
    List<ThreadStream> selectIndirectRepliesById(Integer threadId, RowBounds rowBounds);

    /**
     * 6/22
     * @param userId
     * @param rowBounds
     * @return
     */
    List<Thread> selectByUserFollowingId(Integer userId, RowBounds rowBounds);

    /**
     * 6/22
     * @param userId
     * @return
     */
    ThreadUserSelectedSubjects selectUserSelectedSubjectsById(Integer userId);

    /**
     * 6/22
     * @param userId
     */
    void deleteUserSelectedSubjectsById(Integer userId);

    /**
     * 6/23
     * @param schoolId
     * @param rowBounds
     * @return
     */
    List<Thread> selectedBySchoolIdOrderedByView(Integer schoolId, RowBounds rowBounds);

    /**
     * 7/4
     * @param reportRecord
     */
    void reportThread(ReportRecord reportRecord);

    /**
     * 7/4
     * @param reportRecord
     */
    void reportReplyToThread(ReportRecord reportRecord);

    /**
     * 6/26
     * @param userId
     * @param res
     * @return
     */
    List<Thread> getUserInterestedStudyHelpThreadsByIds(Integer userId, List<Integer> res, RowBounds rowBounds);

    /**
     * 返回用户创建的帖子列表，带分页
     * @param userId 用户id
     * @param rowBounds 分页
     * @return 用户创建的帖子列表
     */
    List<ThreadStats> selectByUserId(@Param("userId") Integer userId, RowBounds rowBounds);

    /**
     * 根据主键查询包含统计的帖子信息
     * @param id 主键
     * @return 包含统计的帖子信息
     */
    ThreadStats selectThreadStatsById(Integer id);
}