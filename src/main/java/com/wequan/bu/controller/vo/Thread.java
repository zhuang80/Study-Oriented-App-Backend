package com.wequan.bu.controller.vo;

import lombok.Data;

import java.util.Date;

/**
 * Database Table Remarks:
 *   帖子列表
 *
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table bu.wq_thread
 *
 * @mbg.generated do_not_delete_during_merge
 */
@Data
public class Thread {
    /**
     * Database Column Remarks:
     *   主键
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.id
     *
     * @mbg.generated
     */
    private Integer id;

    /**
     * Database Column Remarks:
     *   创建帖子用户id，关联user_profile(id)
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.user_id
     *
     * @mbg.generated
     */
    private Integer userId;

    /**
     * Database Column Remarks:
     *   帖子标题
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.title
     *
     * @mbg.generated
     */
    private String title;

    /**
     * Database Column Remarks:
     *   帖子所属类别，两个（学习，非学习），关联category(id)，一一对应
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.category
     *
     * @mbg.generated
     */
    private Short category;

    /**
     * Database Column Remarks:
     *   帖子所属标签，比如math，关联tag(id) ，一一对应
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.tag
     *
     * @mbg.generated
     */
    private Short tag;

    /**
     * Database Column Remarks:
     *   帖子内容
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.content
     *
     * @mbg.generated
     */
    private String content;

    /**
     * Database Column Remarks:
     *   悬赏贴的学习积分
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.study_points_bonus
     *
     * @mbg.generated
     */
    private Short studyPointsBonus;

    /**
     * Database Column Remarks:
     *   帖子创建时间
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.create_time
     *
     * @mbg.generated
     */
    private Date createTime;

    /**
     * Database Column Remarks:
     *   帖子更新时间
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.update_time
     *
     * @mbg.generated
     */
    private Date updateTime;

    /**
     * Database Column Remarks:
     *   帖子点赞数
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.likes
     *
     * @mbg.generated
     */
    private Integer likes;

    /**
     * Database Column Remarks:
     *   帖子拍砖数
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_thread.dislikes
     *
     * @mbg.generated
     */
    private Integer dislikes;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_thread
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Thread other = (Thread) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getUserId() == null ? other.getUserId() == null : this.getUserId().equals(other.getUserId()))
            && (this.getTitle() == null ? other.getTitle() == null : this.getTitle().equals(other.getTitle()))
            && (this.getCategory() == null ? other.getCategory() == null : this.getCategory().equals(other.getCategory()))
            && (this.getTag() == null ? other.getTag() == null : this.getTag().equals(other.getTag()))
            && (this.getContent() == null ? other.getContent() == null : this.getContent().equals(other.getContent()))
            && (this.getStudyPointsBonus() == null ? other.getStudyPointsBonus() == null : this.getStudyPointsBonus().equals(other.getStudyPointsBonus()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()))
            && (this.getLikes() == null ? other.getLikes() == null : this.getLikes().equals(other.getLikes()))
            && (this.getDislikes() == null ? other.getDislikes() == null : this.getDislikes().equals(other.getDislikes()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_thread
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getUserId() == null) ? 0 : getUserId().hashCode());
        result = prime * result + ((getTitle() == null) ? 0 : getTitle().hashCode());
        result = prime * result + ((getCategory() == null) ? 0 : getCategory().hashCode());
        result = prime * result + ((getTag() == null) ? 0 : getTag().hashCode());
        result = prime * result + ((getContent() == null) ? 0 : getContent().hashCode());
        result = prime * result + ((getStudyPointsBonus() == null) ? 0 : getStudyPointsBonus().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        result = prime * result + ((getLikes() == null) ? 0 : getLikes().hashCode());
        result = prime * result + ((getDislikes() == null) ? 0 : getDislikes().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_thread
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", userId=").append(userId);
        sb.append(", title=").append(title);
        sb.append(", category=").append(category);
        sb.append(", tag=").append(tag);
        sb.append(", content=").append(content);
        sb.append(", studyPointsBonus=").append(studyPointsBonus);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateTime=").append(updateTime);
        sb.append(", likes=").append(likes);
        sb.append(", dislikes=").append(dislikes);
        sb.append("]");
        return sb.toString();
    }


    //************************
    private Integer viewCount;
    private Integer replyCount;

}