package com.wequan.bu.controller.vo;

import lombok.Data;

import java.util.Date;

/**
 * Database Table Remarks:
 *   用户交易支付记录
 *
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table bu.wq_transaction
 *
 * @mbg.generated do_not_delete_during_merge
 */
@Data
public class Transaction {
    /**
     * Database Column Remarks:
     *   主键
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.uuid
     *
     * @mbg.generated
     */
    private String uuid;

    /**
     * Database Column Remarks:
     *   交易涉及类型，包括0 -> appointment with tutor; 1 -> public class; 2 -> purchase study point
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.type
     *
     * @mbg.generated
     */
    private Short type;

    /**
     * Database Column Remarks:
     *   交易对手方，关联user_profile(id)
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.pay_from
     *
     * @mbg.generated
     */
    private Integer payFrom;

    /**
     * Database Column Remarks:
     *   交易对手方，关联user_profile(id)
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.pay_to
     *
     * @mbg.generated
     */
    private Integer payTo;

    /**
     * Database Column Remarks:
     *   交易金额
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.pay_amount
     *
     * @mbg.generated
     */
    private Float payAmount;

    /**
     * Database Column Remarks:
     *   支付方式
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.payment_method
     *
     * @mbg.generated
     */
    private Short paymentMethod;

    /**
     * Database Column Remarks:
     *   第三方交易号
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.third_party_transaction_id
     *
     * @mbg.generated
     */
    private String thirdPartyTransactionId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.create_time
     *
     * @mbg.generated
     */
    private Date createTime;

    /**
     * Database Column Remarks:
     *   1 -> success; -1 -> fail
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bu.wq_transaction.status
     *
     * @mbg.generated
     */
    private Short status;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_transaction
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Transaction other = (Transaction) that;
        return (this.getUuid() == null ? other.getUuid() == null : this.getUuid().equals(other.getUuid()))
            && (this.getType() == null ? other.getType() == null : this.getType().equals(other.getType()))
            && (this.getPayFrom() == null ? other.getPayFrom() == null : this.getPayFrom().equals(other.getPayFrom()))
            && (this.getPayTo() == null ? other.getPayTo() == null : this.getPayTo().equals(other.getPayTo()))
            && (this.getPayAmount() == null ? other.getPayAmount() == null : this.getPayAmount().equals(other.getPayAmount()))
            && (this.getPaymentMethod() == null ? other.getPaymentMethod() == null : this.getPaymentMethod().equals(other.getPaymentMethod()))
            && (this.getThirdPartyTransactionId() == null ? other.getThirdPartyTransactionId() == null : this.getThirdPartyTransactionId().equals(other.getThirdPartyTransactionId()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getStatus() == null ? other.getStatus() == null : this.getStatus().equals(other.getStatus()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_transaction
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getUuid() == null) ? 0 : getUuid().hashCode());
        result = prime * result + ((getType() == null) ? 0 : getType().hashCode());
        result = prime * result + ((getPayFrom() == null) ? 0 : getPayFrom().hashCode());
        result = prime * result + ((getPayTo() == null) ? 0 : getPayTo().hashCode());
        result = prime * result + ((getPayAmount() == null) ? 0 : getPayAmount().hashCode());
        result = prime * result + ((getPaymentMethod() == null) ? 0 : getPaymentMethod().hashCode());
        result = prime * result + ((getThirdPartyTransactionId() == null) ? 0 : getThirdPartyTransactionId().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bu.wq_transaction
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", uuid=").append(uuid);
        sb.append(", type=").append(type);
        sb.append(", payFrom=").append(payFrom);
        sb.append(", payTo=").append(payTo);
        sb.append(", payAmount=").append(payAmount);
        sb.append(", paymentMethod=").append(paymentMethod);
        sb.append(", thirdPartyTransactionId=").append(thirdPartyTransactionId);
        sb.append(", createTime=").append(createTime);
        sb.append(", status=").append(status);
        sb.append("]");
        return sb.toString();
    }
}