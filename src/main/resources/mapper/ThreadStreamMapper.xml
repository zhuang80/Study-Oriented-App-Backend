<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wequan.bu.repository.dao.ThreadStreamMapper">
  <resultMap id="BaseResultMap" type="com.wequan.bu.repository.model.ThreadStream">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="thread_id" jdbcType="INTEGER" property="threadId" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="to_stream_id" jdbcType="INTEGER" property="toStreamId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="dislikes" jdbcType="INTEGER" property="dislikes" />
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, thread_id, comment, to_stream_id, create_time, update_time, likes, dislikes
  </sql>

  <resultMap id="ResultMapWithThread" extends="BaseResultMap" type="com.wequan.bu.repository.model.extend.ThreadStreamBriefInfo">
    <result column="_thread_id" jdbcType="INTEGER" property="thread.id" />
    <result column="_thread_create_by" jdbcType="INTEGER" property="thread.createBy" />
    <result column="_thread_title" jdbcType="VARCHAR" property="thread.title" />
    <result column="_thread_category" jdbcType="INTEGER" property="thread.category" />
    <result column="_thread_tag_id" jdbcType="INTEGER" property="thread.tagId" />
  </resultMap>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ${schema}.wq_thread_stream
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUserId" resultMap="ResultMapWithThread">
    select
      ts.*,
      t.id _thread_id,
      t.create_by _thread_create_by,
      t.title _thread_title,
      t.category _thread_category,
      t.tag_id _thread_tag_id
    from ${schema}.wq_thread_stream ts
    inner join ${schema}.wq_thread t on t.id = ts.thread_id
    where ts.user_id = #{userId}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ${schema}.wq_thread_stream
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.wequan.bu.repository.model.ThreadStream" useGeneratedKeys="true">
    insert into ${schema}.wq_thread_stream
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="threadId != null">
        thread_id,
      </if>
      <if test="comment != null and comment != ''">
        comment,
      </if>
      <if test="toStreamId != null">
        to_stream_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="dislikes != null">
        dislikes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="threadId != null">
        #{threadId,jdbcType=INTEGER},
      </if>
      <if test="comment != null and comment != ''">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="toStreamId != null">
        #{toStreamId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="dislikes != null">
        #{dislikes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.wequan.bu.repository.model.ThreadStream">
    update ${schema}.wq_thread_stream
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="threadId != null">
        thread_id = #{threadId,jdbcType=INTEGER},
      </if>
      <if test="comment != null and comment != ''">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="toStreamId != null">
        to_stream_id = #{toStreamId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="dislikes != null">
        dislikes = #{dislikes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>